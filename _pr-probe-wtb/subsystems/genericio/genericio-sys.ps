%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.8.1-20121123-13-g875406c
%%CreationDate: Wed Jan 25 17:01:24 2017
%%Title: /home/commonadmin/permanent/profitable/C3DP/Corporate/PatchRap/subsystems/genericio/genericio-sys.sch
%%Author: (null)
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%EndComments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
6592 499 translate 90 rotate
0.767620 0.767620 scale
-36891 -47162 translate
gsave
false false false false 202.222224 [(3 \\/ 1 - Vsys/Vcc) (3 \\\\ 2 - pGND/sGnd) (2 - 3 - Vext/Vmid/Avcc/SigAlt              \(NC\)                                                                      \(LO\)) (1 \\/ 4 - Sig-/SigTx-                            \(sGND\)                            \(Dir\)              \(I2C, UART\)       ) (1 \\\\ 5 - Sig+/SigTx+                            \(COM,ANA,Probe\)              \(Step\)       \(I2C, UART\)              \(IF\)) (2 - 6 - sGND                                   \(NO\)) (4 \\/ 7 - PWMalternate/SigRx+              \(Control, Servo, Heater\)       \(I2C,UART\)                            \(RF\)) (4 \\\\ 8 - PWMdirect/SigRx-              \(Fan\)                            \(I2C,UART\)) ] 0 41200 47200 180.555557 text
grestore
gsave
40100 49400 40300 49400 10 line
40100 49500 40100 49300 10 line
40050 49445 40050 49355 10 line
40010 49420 40010 49380 10 line
grestore
gsave
45700 51600 45700 51300 10 line
gsave
false true false false 161.777776 [(1) ] 270 45750 51400 144.444443 text
grestore
gsave
false false false false 161.777776 [(in1) ] 270 45700 51250 144.444443 text
grestore
45300 51600 45300 51300 10 line
gsave
false true false false 161.777776 [(2) ] 270 45350 51400 144.444443 text
grestore
gsave
false false false false 161.777776 [(in2) ] 270 45300 51250 144.444443 text
grestore
44900 51600 44900 51300 10 line
gsave
false true false false 161.777776 [(3) ] 270 44950 51400 144.444443 text
grestore
gsave
false false false false 161.777776 [(in3) ] 270 44900 51250 144.444443 text
grestore
44500 51600 44500 51300 10 line
gsave
false true false false 161.777776 [(4) ] 270 44550 51400 144.444443 text
grestore
gsave
false false false false 161.777776 [(in4) ] 270 44500 51250 144.444443 text
grestore
44100 51600 44100 51300 10 line
gsave
false true false false 161.777776 [(5) ] 270 44150 51400 144.444443 text
grestore
gsave
false false false false 161.777776 [(Vmin) ] 270 44100 51250 144.444443 text
grestore
45700 49600 45700 49900 10 line
gsave
false false false false 161.777776 [(10) ] 270 45750 49800 144.444443 text
grestore
gsave
false true false false 161.777776 [(in8) ] 270 45700 49950 144.444443 text
grestore
45300 49600 45300 49900 10 line
gsave
false false false false 161.777776 [(9) ] 270 45350 49800 144.444443 text
grestore
gsave
false true false false 161.777776 [(in7) ] 270 45300 49950 144.444443 text
grestore
44900 49600 44900 49900 10 line
gsave
false false false false 161.777776 [(8) ] 270 44950 49800 144.444443 text
grestore
gsave
false true false false 161.777776 [(in6) ] 270 44900 49950 144.444443 text
grestore
44500 49600 44500 49900 10 line
gsave
false false false false 161.777776 [(7) ] 270 44550 49800 144.444443 text
grestore
gsave
false true false false 161.777776 [(in5) ] 270 44500 49950 144.444443 text
grestore
44100 49600 44100 49900 10 line
gsave
false false false false 161.777776 [(6) ] 270 44150 49800 144.444443 text
grestore
gsave
false true false false 161.777776 [(GND) ] 270 44100 49950 144.444443 text
grestore
43700 49900 46100 49900 10 line
46100 49900 46100 51300 10 line
46100 51300 43700 51300 10 line
43700 51300 43700 49900 10 line
gsave
false false false false 202.222224 [(SP3003-08ATG) ] 270 46200 51300 180.555557 text
grestore
newpath
44100 51600
25
0 360 arc
fill
grestore
gsave
false true false false 202.222224 [(U1) ] 270 45800 50400 180.555557 text
grestore
40300 51400 47000 51400 10 line
40300 49800 47000 49800 10 line
40300 50200 47000 50200 10 line
40300 51000 47000 51000 10 line
44500 49800 44500 49600 10 line
44900 50200 44900 49600 10 line
45300 51000 45300 49600 10 line
45700 51400 45700 49600 10 line
44500 51600 44500 52200 10 line
40300 51800 47000 51800 10 line
40300 52600 47000 52600 10 line
40300 52200 47000 52200 10 line
gsave
47200 51400 47000 51400 10 line
47500 51400 47600 51500 10 line
47500 51400 47600 51300 10 line
47200 51400 47500 51400 10 line
grestore
gsave
false true false false 202.222224 [(SigM) ] 0 47500 51400 180.555557 text
grestore
gsave
47200 51000 47000 51000 10 line
47500 51000 47600 51100 10 line
47500 51000 47600 50900 10 line
47200 51000 47500 51000 10 line
grestore
gsave
false true false false 202.222224 [(SigP) ] 0 47500 51000 180.555557 text
grestore
gsave
47200 50200 47000 50200 10 line
47500 50200 47600 50300 10 line
47500 50200 47600 50100 10 line
47200 50200 47500 50200 10 line
grestore
gsave
false true false false 202.222224 [(PWMa) ] 0 47500 50200 180.555557 text
grestore
gsave
47200 49800 47000 49800 10 line
47500 49800 47600 49900 10 line
47500 49800 47600 49700 10 line
47200 49800 47500 49800 10 line
grestore
gsave
false true false false 202.222224 [(PWMd) ] 0 47500 49800 180.555557 text
grestore
gsave
47200 52600 47000 52600 10 line
47500 52600 47600 52700 10 line
47500 52600 47600 52500 10 line
47200 52600 47500 52600 10 line
grestore
gsave
false true false false 202.222224 [(Vsys) ] 0 47500 52600 180.555557 text
grestore
gsave
47200 52200 47000 52200 10 line
47500 52200 47600 52300 10 line
47500 52200 47600 52100 10 line
47200 52200 47500 52200 10 line
grestore
gsave
false true false false 202.222224 [(pGND-sGND) ] 0 47500 52200 180.555557 text
grestore
gsave
47200 51800 47000 51800 10 line
47500 51800 47600 51900 10 line
47500 51800 47600 51700 10 line
47200 51800 47500 51800 10 line
grestore
gsave
false true false false 202.222224 [(Vext-SigAlt) ] 0 47500 51800 180.555557 text
grestore
gsave
40100 50600 40300 50600 10 line
40100 50500 40100 50700 10 line
40050 50555 40050 50645 10 line
40010 50580 40010 50620 10 line
grestore
gsave
47200 50600 47000 50600 10 line
47500 50600 47600 50700 10 line
47500 50600 47600 50500 10 line
47200 50600 47500 50600 10 line
grestore
gsave
false true false false 202.222224 [(sGND) ] 0 47500 50600 180.555557 text
grestore
gsave
41200 52700 41400 52700 10 line
42100 52700 41900 52700 10 line
41700 52800 41700 52600 10 line
41700 52700 41900 52700 10 line
41600 52700 41400 52700 10 line
41650 52700 200 0 360 10 darc
41600 52800 41600 52600 10 line
41650 52840 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T1) ] 0 41400 52700 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 52500 180.555557 text
grestore
gsave
41200 52300 41400 52300 10 line
42100 52300 41900 52300 10 line
41700 52400 41700 52200 10 line
41700 52300 41900 52300 10 line
41600 52300 41400 52300 10 line
41650 52300 200 0 360 10 darc
41600 52400 41600 52200 10 line
41650 52440 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T2) ] 0 41400 52300 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 52100 180.555557 text
grestore
gsave
41200 51900 41400 51900 10 line
42100 51900 41900 51900 10 line
41700 52000 41700 51800 10 line
41700 51900 41900 51900 10 line
41600 51900 41400 51900 10 line
41650 51900 200 0 360 10 darc
41600 52000 41600 51800 10 line
41650 52040 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T3) ] 0 41400 51900 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 51700 180.555557 text
grestore
41200 52700 41200 52600 10 line
41200 52300 41200 52200 10 line
41200 51900 41200 51800 10 line
gsave
41200 51500 41400 51500 10 line
42100 51500 41900 51500 10 line
41700 51600 41700 51400 10 line
41700 51500 41900 51500 10 line
41600 51500 41400 51500 10 line
41650 51500 200 0 360 10 darc
41600 51600 41600 51400 10 line
41650 51640 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T4) ] 0 41400 51500 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 51300 180.555557 text
grestore
41200 51500 41200 51400 10 line
gsave
41200 51100 41400 51100 10 line
42100 51100 41900 51100 10 line
41700 51200 41700 51000 10 line
41700 51100 41900 51100 10 line
41600 51100 41400 51100 10 line
41650 51100 200 0 360 10 darc
41600 51200 41600 51000 10 line
41650 51240 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T5) ] 0 41400 51100 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 50900 180.555557 text
grestore
gsave
41200 50300 41400 50300 10 line
42100 50300 41900 50300 10 line
41700 50400 41700 50200 10 line
41700 50300 41900 50300 10 line
41600 50300 41400 50300 10 line
41650 50300 200 0 360 10 darc
41600 50400 41600 50200 10 line
41650 50440 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T6) ] 0 41400 50300 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 50100 180.555557 text
grestore
41200 51100 41200 51000 10 line
41200 50300 41200 50200 10 line
gsave
41200 49900 41400 49900 10 line
42100 49900 41900 49900 10 line
41700 50000 41700 49800 10 line
41700 49900 41900 49900 10 line
41600 49900 41400 49900 10 line
41650 49900 200 0 360 10 darc
41600 50000 41600 49800 10 line
41650 50040 30 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(T7) ] 0 41400 49900 180.555557 text
grestore
gsave
false false false false 202.222224 [(2kV) ] 0 41600 49700 180.555557 text
grestore
41200 49900 41200 49800 10 line
gsave
42300 52700 42100 52700 10 line
42300 52800 42300 52600 10 line
42350 52745 42350 52655 10 line
42390 52720 42390 52680 10 line
grestore
gsave
42300 52300 42100 52300 10 line
42300 52400 42300 52200 10 line
42350 52345 42350 52255 10 line
42390 52320 42390 52280 10 line
grestore
gsave
42300 51900 42100 51900 10 line
42300 52000 42300 51800 10 line
42350 51945 42350 51855 10 line
42390 51920 42390 51880 10 line
grestore
gsave
42300 51500 42100 51500 10 line
42300 51600 42300 51400 10 line
42350 51545 42350 51455 10 line
42390 51520 42390 51480 10 line
grestore
gsave
42300 51100 42100 51100 10 line
42300 51200 42300 51000 10 line
42350 51145 42350 51055 10 line
42390 51120 42390 51080 10 line
grestore
gsave
42300 50300 42100 50300 10 line
42300 50400 42300 50200 10 line
42350 50345 42350 50255 10 line
42390 50320 42390 50280 10 line
grestore
gsave
42300 49900 42100 49900 10 line
42300 50000 42300 49800 10 line
42350 49945 42350 49855 10 line
42390 49920 42390 49880 10 line
grestore
gsave
42600 52400 42800 52400 10 line
43500 52400 43300 52400 10 line
43000 52600 43000 52200 10 line
43100 52600 43100 52200 10 line
43300 52400 43100 52400 10 line
43000 52400 42800 52400 10 line
grestore
gsave
false false false false 202.222224 [(C1) ] 0 42700 52400 180.555557 text
grestore
gsave
false false false false 202.222224 [(4.7uF) ] 0 42700 52200 180.555557 text
grestore
43500 52400 43500 52200 10 line
42600 52400 42600 52600 10 line
gsave
43700 52000 43500 52000 10 line
43700 52100 43700 51900 10 line
43750 52045 43750 51955 10 line
43790 52020 43790 51980 10 line
grestore
gsave
43100 51600 43300 51600 10 line
gsave
false false false false 161.777776 [(2) ] 90 43250 51650 144.444443 text
grestore
44100 51600 43900 51600 10 line
gsave
false false false false 161.777776 [(1) ] 90 44050 51650 144.444443 text
grestore
43400 51600 50 0 360 10 darc
43800 51600 50 0 360 10 darc
43300 51500 43900 51500 10 line
43900 51500 43900 51700 10 line
43900 51700 43300 51700 10 line
43300 51700 43300 51500 10 line
newpath
43100 51600
25
0 360 arc
fill
newpath
44100 51600
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(J2) ] 90 43700 51500 180.555557 text
grestore
gsave
42900 51600 43100 51600 10 line
42900 51500 42900 51700 10 line
42850 51555 42850 51645 10 line
42810 51580 42810 51620 10 line
newpath
43100 51600
25
0 360 arc
fill
grestore
gsave
42600 52000 42800 52000 10 line
43500 52000 43300 52000 10 line
43000 52200 43000 51800 10 line
43100 52200 43100 51800 10 line
43300 52000 43100 52000 10 line
43000 52000 42800 52000 10 line
grestore
gsave
false false false false 202.222224 [(C2) ] 0 42700 52000 180.555557 text
grestore
gsave
false false false false 202.222224 [(4.7uF) ] 0 42700 51800 180.555557 text
grestore
42600 52000 42600 51800 10 line
gsave
43900 49600 44100 49600 10 line
43900 49500 43900 49700 10 line
43850 49555 43850 49645 10 line
43810 49580 43810 49620 10 line
grestore
gsave
48000 51000 48200 51000 10 line
48700 50900 48800 51000 10 line
48800 51000 48700 51100 10 line
48200 51000 48300 51100 10 line
48300 50900 48200 51000 10 line
48300 50900 48700 50900 10 line
48300 51100 48700 51100 10 line
60 60 47970 50970 fbox
grestore
gsave
false false false true 202.222224 [(net=SigP:1) ] 0 48900 50900 180.555557 text
grestore
gsave
false false true false 202.222224 [(IO) ] 0 48900 51000 180.555557 text
grestore
gsave
48000 51400 48200 51400 10 line
48700 51300 48800 51400 10 line
48800 51400 48700 51500 10 line
48200 51400 48300 51500 10 line
48300 51300 48200 51400 10 line
48300 51300 48700 51300 10 line
48300 51500 48700 51500 10 line
60 60 47970 51370 fbox
grestore
gsave
false false false true 202.222224 [(net=SigM:1) ] 0 48900 51300 180.555557 text
grestore
gsave
false false true false 202.222224 [(IO) ] 0 48900 51400 180.555557 text
grestore
gsave
48000 49800 48200 49800 10 line
48700 49700 48800 49800 10 line
48800 49800 48700 49900 10 line
48200 49800 48300 49900 10 line
48300 49700 48200 49800 10 line
48300 49700 48700 49700 10 line
48300 49900 48700 49900 10 line
60 60 47970 49770 fbox
grestore
gsave
false false false true 202.222224 [(net=PWMd:1) ] 0 48900 49700 180.555557 text
grestore
gsave
false false true false 202.222224 [(IO) ] 0 48900 49800 180.555557 text
grestore
gsave
48000 50200 48200 50200 10 line
48700 50100 48800 50200 10 line
48800 50200 48700 50300 10 line
48200 50200 48300 50300 10 line
48300 50100 48200 50200 10 line
48300 50100 48700 50100 10 line
48300 50300 48700 50300 10 line
60 60 47970 50170 fbox
grestore
gsave
false false false true 202.222224 [(net=PWMa:1) ] 0 48900 50100 180.555557 text
grestore
gsave
false false true false 202.222224 [(IO) ] 0 48900 50200 180.555557 text
grestore
44100 51600 43100 51600 10 line
gsave
39100 52200 39300 52200 10 line
39100 52100 39100 52300 10 line
39050 52155 39050 52245 10 line
39010 52180 39010 52220 10 line
grestore
gsave
39300 52200 39500 52200 10 line
gsave
false false false false 161.777776 [(2) ] 90 39450 52250 144.444443 text
grestore
40300 52200 40100 52200 10 line
gsave
false false false false 161.777776 [(1) ] 90 40250 52250 144.444443 text
grestore
39600 52200 50 0 360 10 darc
40000 52200 50 0 360 10 darc
39500 52100 40100 52100 10 line
40100 52100 40100 52300 10 line
40100 52300 39500 52300 10 line
39500 52300 39500 52100 10 line
newpath
40300 52200
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(J1) ] 90 39900 52100 180.555557 text
grestore
gsave
46800 50600 47000 50600 10 line
46800 50500 46800 50700 10 line
46750 50555 46750 50645 10 line
46710 50580 46710 50620 10 line
grestore
gsave
false false false false 202.222224 [(If pGND-sGND is connected to) (ground, netlists will show this) (jumper shorted, effectively setting) (minimum impedance grounding.) ] 0 36900 51100 180.555557 text
grestore
45700 51600 45700 51800 10 line
45300 51600 45300 52200 10 line
gsave
false false false false 202.222224 [(Vext capacitor should be omitted if) (any downstream peripherials are to) (sink Vext current to pGND.) ] 0 36900 52500 180.555557 text
grestore
gsave
40300 52600 40500 52600 10 line
gsave
false false false false 161.777776 [(1) ] 0 40650 52600 144.444443 text
grestore
40550 52600 50 0 360 10 darc
40300 52200 40500 52200 10 line
gsave
false false false false 161.777776 [(2) ] 0 40650 52200 144.444443 text
grestore
40550 52200 50 0 360 10 darc
40300 51800 40500 51800 10 line
gsave
false false false false 161.777776 [(3) ] 0 40650 51800 144.444443 text
grestore
40550 51800 50 0 360 10 darc
40300 51400 40500 51400 10 line
gsave
false false false false 161.777776 [(4) ] 0 40650 51400 144.444443 text
grestore
40550 51400 50 0 360 10 darc
40300 51000 40500 51000 10 line
gsave
false false false false 161.777776 [(5) ] 0 40650 51000 144.444443 text
grestore
40550 51000 50 0 360 10 darc
40300 50600 40500 50600 10 line
gsave
false false false false 161.777776 [(6) ] 0 40650 50600 144.444443 text
grestore
40550 50600 50 0 360 10 darc
40300 50200 40500 50200 10 line
gsave
false false false false 161.777776 [(7) ] 0 40650 50200 144.444443 text
grestore
40550 50200 50 0 360 10 darc
40300 49800 40500 49800 10 line
gsave
false false false false 161.777776 [(8) ] 0 40650 49800 144.444443 text
grestore
40550 49800 50 0 360 10 darc
40300 49400 40500 49400 10 line
gsave
false false false false 161.777776 [(9) ] 0 40650 49400 144.444443 text
grestore
40550 49400 50 0 360 10 darc
40300 49000 40500 49000 10 line
gsave
false false false false 161.777776 [(10) ] 0 40650 49000 144.444443 text
grestore
40550 49000 50 0 360 10 darc
40300 48600 40500 48600 10 line
gsave
false false false false 161.777776 [(11) ] 0 40650 48600 144.444443 text
grestore
40550 48600 50 0 360 10 darc
40300 48200 40500 48200 10 line
gsave
false false false false 161.777776 [(12) ] 0 40650 48200 144.444443 text
grestore
40550 48200 50 0 360 10 darc
40300 47800 40500 47800 10 line
gsave
false false false false 161.777776 [(13) ] 0 40650 47800 144.444443 text
grestore
40550 47800 50 0 360 10 darc
40600 47400 41000 47400 10 line
41000 47400 41000 53000 10 line
41000 53000 40600 53000 10 line
40600 53000 40600 47400 10 line
newpath
40300 52600
25
0 360 arc
fill
newpath
40300 52200
25
0 360 arc
fill
newpath
40300 51800
25
0 360 arc
fill
grestore
gsave
false true false false 202.222224 [(GEN) ] 0 41000 53100 180.555557 text
grestore
gsave
40200 51900 40000 51900 10 line
40000 51750 40000 52050 10 line
gsave
false false false false 161.777776 [(Vee) ] 90 39950 51775 144.444443 text
grestore
grestore
40200 51900 40300 51900 10 line
40300 51900 40300 52200 10 line
gsave
40300 49000 40100 49000 10 line
40100 48850 40100 49150 10 line
gsave
false false false false 161.777776 [(Vee) ] 90 40050 48875 144.444443 text
grestore
grestore
gsave
40100 48200 40300 48200 10 line
40100 48300 40100 48100 10 line
40050 48245 40050 48155 10 line
40010 48220 40010 48180 10 line
grestore
gsave
40000 48700 39900 48500 10 line
39900 48500 39800 48700 10 line
39800 48700 39700 48500 10 line
39700 48500 39600 48700 10 line
40000 48700 40100 48500 10 line
40100 48500 40150 48600 10 line
40300 48600 40150 48600 10 line
39400 48600 39552 48600 10 line
39601 48700 39550 48600 10 line
grestore
gsave
false false false false 202.222224 [(2.2k) ] 0 39800 48500 180.555557 text
grestore
gsave
false false false false 202.222224 [(R1) ] 0 40000 48400 180.555557 text
grestore
gsave
40300 52600 40300 52800 10 line
40450 52800 40150 52800 10 line
newpath
40300 52600
25
0 360 arc
fill
grestore
gsave
true false false false 202.222224 [(Vsys:1) ] 0 40300 52850 180.555557 text
grestore
gsave
39700 51500 39700 51900 10 line
40000 51700 39700 51700 10 line
gsave
false false false false 202.222224 [(Vext) ] 90 39700 51500 180.555557 text
grestore
grestore
40000 51700 40300 51700 10 line
40300 51700 40300 51800 10 line
gsave
39100 47600 39100 48000 10 line
39400 47800 39100 47800 10 line
gsave
false false false false 202.222224 [(Vext) ] 90 39100 47600 180.555557 text
grestore
grestore
gsave
39400 48600 39200 48600 10 line
39200 48750 39200 48450 10 line
grestore
gsave
true false false false 202.222224 [(Vsys:1) ] 90 39150 48600 180.555557 text
grestore
gsave
40000 47900 39900 47700 10 line
39900 47700 39800 47900 10 line
39800 47900 39700 47700 10 line
39700 47700 39600 47900 10 line
40000 47900 40100 47700 10 line
40100 47700 40150 47800 10 line
40300 47800 40150 47800 10 line
39400 47800 39552 47800 10 line
39601 47900 39550 47800 10 line
grestore
gsave
false false false false 202.222224 [(2.2k) ] 0 39800 47700 180.555557 text
grestore
gsave
false false false false 202.222224 [(R2) ] 0 40000 47600 180.555557 text
grestore
gsave
45900 52400 45700 52400 10 line
gsave
false true false false 161.777776 [(2) ] 270 45750 52450 144.444443 text
grestore
44900 52400 45100 52400 10 line
gsave
false true false false 161.777776 [(1) ] 270 44950 52450 144.444443 text
grestore
45600 52400 50 0 360 10 darc
45200 52400 50 0 360 10 darc
45100 52300 45700 52300 10 line
45700 52300 45700 52500 10 line
45700 52500 45100 52500 10 line
45100 52500 45100 52300 10 line
grestore
gsave
false false false true 202.222224 [(J3) ] 90 45300 52300 180.555557 text
grestore
44900 51600 44900 52400 10 line
45900 52400 45900 52600 10 line
newpath
44100 51600
25
0 360 arc
fill
newpath
45700 51400
25
0 360 arc
fill
newpath
41200 51400
25
0 360 arc
fill
newpath
44500 49800
25
0 360 arc
fill
newpath
41200 49800
25
0 360 arc
fill
newpath
44900 50200
25
0 360 arc
fill
newpath
41200 50200
25
0 360 arc
fill
newpath
45300 51000
25
0 360 arc
fill
newpath
41200 51000
25
0 360 arc
fill
newpath
44500 49800
25
0 360 arc
fill
newpath
44500 49800
25
0 360 arc
fill
newpath
44900 50200
25
0 360 arc
fill
newpath
44900 50200
25
0 360 arc
fill
newpath
45300 51000
25
0 360 arc
fill
newpath
45300 51000
25
0 360 arc
fill
newpath
45700 51400
25
0 360 arc
fill
newpath
45700 51400
25
0 360 arc
fill
newpath
44500 52200
25
0 360 arc
fill
newpath
44500 52200
25
0 360 arc
fill
newpath
40300 51800
25
0 360 arc
fill
newpath
41200 51800
25
0 360 arc
fill
newpath
42600 51800
25
0 360 arc
fill
newpath
45700 51800
25
0 360 arc
fill
newpath
40300 52600
25
0 360 arc
fill
newpath
41200 52600
25
0 360 arc
fill
newpath
42600 52600
25
0 360 arc
fill
newpath
45900 52600
25
0 360 arc
fill
newpath
40300 52200
25
0 360 arc
fill
newpath
44500 52200
25
0 360 arc
fill
newpath
41200 52200
25
0 360 arc
fill
newpath
43500 52200
25
0 360 arc
fill
newpath
45300 52200
25
0 360 arc
fill
newpath
41200 52600
25
0 360 arc
fill
newpath
41200 52600
25
0 360 arc
fill
newpath
41200 52200
25
0 360 arc
fill
newpath
41200 52200
25
0 360 arc
fill
newpath
41200 51800
25
0 360 arc
fill
newpath
41200 51800
25
0 360 arc
fill
newpath
41200 51400
25
0 360 arc
fill
newpath
41200 51400
25
0 360 arc
fill
newpath
41200 51000
25
0 360 arc
fill
newpath
41200 51000
25
0 360 arc
fill
newpath
41200 50200
25
0 360 arc
fill
newpath
41200 50200
25
0 360 arc
fill
newpath
41200 49800
25
0 360 arc
fill
newpath
41200 49800
25
0 360 arc
fill
newpath
43500 52200
25
0 360 arc
fill
newpath
43500 52200
25
0 360 arc
fill
newpath
42600 52600
25
0 360 arc
fill
newpath
42600 52600
25
0 360 arc
fill
newpath
43100 51600
25
0 360 arc
fill
newpath
44100 51600
25
0 360 arc
fill
newpath
43100 51600
25
0 360 arc
fill
newpath
42600 51800
25
0 360 arc
fill
newpath
42600 51800
25
0 360 arc
fill
60 60 47970 50970 fbox
60 60 47970 51370 fbox
60 60 47970 49770 fbox
60 60 47970 50170 fbox
newpath
44100 51600
25
0 360 arc
fill
newpath
43100 51600
25
0 360 arc
fill
newpath
40300 52200
25
0 360 arc
fill
newpath
45700 51800
25
0 360 arc
fill
newpath
45700 51800
25
0 360 arc
fill
newpath
45300 52200
25
0 360 arc
fill
newpath
45300 52200
25
0 360 arc
fill
newpath
40300 52600
25
0 360 arc
fill
newpath
40300 52200
25
0 360 arc
fill
newpath
40300 51800
25
0 360 arc
fill
newpath
40300 52200
25
0 360 arc
fill
newpath
40300 52600
25
0 360 arc
fill
newpath
40300 51800
25
0 360 arc
fill
newpath
45900 52600
25
0 360 arc
fill
newpath
45900 52600
25
0 360 arc
fill
showpage
%%End
